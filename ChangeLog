2013-06-02	Bogdan Drozdowski <bogdandr@op.pl>

	* LibNetBlock version 0.5
	  Portability improvements (fixes for compilation without some header
	  files or functions). Other small fixes and updates.
	* configure.ac: checking for the -O3 compiler option. No longer
	  requiring malloc().
	* src/libnetblock.h.in: correctly indented constants introduced in 0.4
	* README, INSTALL, doc/libnetblock.texi.in: changed "rpm" to "RPM",
	  commands in separate paragraphs
	* src/lnb_banning.c: added the stdlib.h file, required by getenv().
	  Added the malloc.h file (optional).
	* src/lnb_exec.c (__lnb_is_forbidden_file,__lnb_is_forbidden_program):
	  small improvements
	* src/lnb_exec.c (__lnb_is_forbidden_program): fixed compiling
	  without malloc(), sys/stat.h, readlink() and getenv().
	* src/Makefile.am: made libnetblock.h not distributed
	* src/lnb_opens.c: removed including the unnecessary malloc.h file
	* src/lnb_exec.c: added a missing "unused" attribute

2012-09-30	Bogdan Drozdowski <bogdandr@op.pl>

	* LibNetBlock version 0.4
	  Banning mechanism fixed and updated with new possibilities.
	* doc/libnetblock.texi.in: added @dircategory and @direntry.
	* configure.ac: added a summary of enabled options. Added two new
	  command-line banning-related options: --enable-environment
	  (enables additional banning files pointed to by environment
	  variables) and --enable-user-files (enables additional banning
	  files in users' home directories). Using AS_HELP_STRING to format
	  help for options. Not checking for memcpy(), lstat() & snprintf().
	* src/lnb_priv.h: added missing LNB_ prefixes
	* src/lnb_banning.c: support for banning files pointed to by
	  environment variables and additional banning files in users' home
	  directories. Fixed checking if a program is banned.
	* src/libnetblock.h.in: added constants for the names of the
	  environment variable poiting to an additional banning file location
	  and additional banning files in users' home directories.
	* src/Makefile.am: made libnetblock.h not only in PUBLIC_INTERFACE,
	  since now it is used in lnb_banning.c.
	* README, INSTALL, doc/libnetblock.texi.in, doc/libnetblock.3: updated
	  with new banning information. Minor corrections.

2012-02-11	Bogdan Drozdowski <bogdandr@op.pl>

	* libnetblock version 0.3
	  Made the header file SWIG-enabled, updated copyright, code cleanup,
	  efficiency corrected, more forbidden programs, documentation update.
	* libnetblock.spec.in: corrected the description of the devel package.
	* src/libnetblock.h.in: SWIG compatibility.
	* src/lnb_banning.c (__lnb_check_prog_ban): stopping the checking as
	  soon as a match is found. Preserving errno.
	* src/lnb_exec.c: moved __lnb_is_forbidden_file() from lnb_opens.c
	  and made it public. Using a constant for the separator char between
	  different paths. Added more forbidden programs.
	* doc/libnetblock.texi.in: a new chapter about the development library
	  and using libnetblock with SWIG, marked the URLs.
	* src/lnb_net.c (socket, bind): allow Unix domain sockets.
	* README, INSTALL: added information about SWIG, fixed typos
	* doc/Makefile.am: fix typo

2011-10-07	Bogdan Drozdowski <bogdandr@op.pl>

	* libnetblock version 0.2
	  Added a file for pkg-config with library information. Verified that
	  no symbol whose name can't be randomized can be reached from the
	  outside.
	* configure.ac: added new C compiler flags to check for:
	  -Wwrite-strings and -Waggregate-return. Added generating a file
	  for pkg-config.
	* libnetblock.pc.in: a data file for pkg-config.
	* libnetblock.spec.in: added the pkg-config file to the -devel package
	* README, INSTALL, doc/libnetblock.texi.in: added the
	  --enable-public-interface configure option.
	* src/{libnetblock.h.in,lnb_public.c.in}: added version information
	  to the library's public interface.
	* src/lnb_main.c: removed unused declaration of __lnb_end().
	* Makefile.am: added the file for pkg-config.

2011-06-16	Bogdan Drozdowski <bogdandr@op.pl>

	* libnetblock version 0.1
	  Initial version. Intercepting: socket, sendmsg+recvmsg,
	  execve (thus the whole exec* family) with the system function (can
	  be used to launch bad programs), bind, a bunch of file opening
	  functions (fopen, fopen64, open, open64, freopen, freopen64,
	  openat, openat64) which can be used to access files under /dev/net,
	  some of the function from the libpcap library, to prevent raw
	  opening of network devices. Implemented program banning. Providing
	  a public interface to use by programmers to secure their programs.
